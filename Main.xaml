<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="828.8,1516" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="24">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="19">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main" sap:VirtualizedContainerService.HintSize="839.2,1351.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="var_jsonResponse" />
      <Variable x:TypeArguments="njl:JArray" Name="var_jsonArray" />
      <Variable x:TypeArguments="njl:JObject" Name="var_jsonTest" />
      <Variable x:TypeArguments="njl:JToken" Name="JsonDoc" />
      <Variable x:TypeArguments="x:Boolean" Name="var_boolContinue" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="797.6,60" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Boolean">[var_boolContinue]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
      </Assign.Value>
    </Assign>
    <While sap2010:Annotation.AnnotationText="Esse loop infinito tem o intuito de manter o robô rodando em background e funciona como um workarround para a falta do orchestrator." sap:VirtualizedContainerService.HintSize="797.6,1158.4" sap2010:WorkflowViewState.IdRef="While_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <While.Condition>[var_boolContinue &lt;&gt; False]</While.Condition>
      <Sequence sap:VirtualizedContainerService.HintSize="752.8,968" sap2010:WorkflowViewState.IdRef="Sequence_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <DoWhile sap2010:Annotation.AnnotationText="O robô fica fazendo um request continuo para ver se possui um novo registro dentro da base de dados que necessite de alguma atividade dele." DisplayName="Do While" sap:VirtualizedContainerService.HintSize="711.2,497.6" sap2010:WorkflowViewState.IdRef="DoWhile_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <DoWhile.Condition>[var_jsonResponse.toUpper.Contains("NOT_FOUND")]</DoWhile.Condition>
          <Sequence DisplayName="ApiRequest" sap:VirtualizedContainerService.HintSize="375.2,291.2" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="var_strEndPoint">
                <Variable.Default>
                  <Literal x:TypeArguments="x:String">sua url de request</Literal>
                </Variable.Default>
              </Variable>
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" TimeoutMS="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" sap2010:Annotation.AnnotationText="É feito o request para a base de dados, retornando os dados no formato desejado (nesse caso, em JSON)." BodyFormat="application/xml" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request" EndPoint="[var_strEndPoint]" sap:VirtualizedContainerService.HintSize="333.6,98.4" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="GET" Result="[var_jsonResponse]">
              <ui:HttpClient.Attachments>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Attachments>
              <ui:HttpClient.Cookies>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Cookies>
              <ui:HttpClient.Headers>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Headers>
              <ui:HttpClient.Parameters>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Parameters>
              <ui:HttpClient.UrlSegments>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.UrlSegments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:HttpClient>
            <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[var_jsonTest]" JsonString="[var_jsonResponse]" />
          </Sequence>
        </DoWhile>
        <Assign sap:VirtualizedContainerService.HintSize="711.2,60" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="njl:JToken">[JsonDoc]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="njl:JToken">[var_jsonTest("fields")]</InArgument>
          </Assign.Value>
        </Assign>
        <If Condition="[JsonDoc(&quot;Tipo&quot;)(&quot;stringValue&quot;).ToString = &quot;Banco de Horas&quot;]" DisplayName="If - Confere o tipo de requisição feita" sap:VirtualizedContainerService.HintSize="711.2,237.6" sap2010:WorkflowViewState.IdRef="If_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Sq_BancoHoras workflow" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="RH\Sq_BancoHoras.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="arg_strURL">[JsonDoc("URL")("stringValue").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="arg_strEmailUser">[JsonDoc("Email")("stringValue").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="arg_strMes">[JsonDoc("Mes")("stringValue").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="arg_strCPF">[JsonDoc("CPF")("stringValue").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="arg_strNome">[JsonDoc("Nome")("stringValue").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="arg_strCod">[JsonDoc("Cod")("stringValue").ToString]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </If.Then>
          <If.Else>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Sq_ComprovantedeRenda workflow" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="RH\Sq_ComprovantedeRenda.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="arg_strCod">[JsonDoc("Cod")("stringValue").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="arg_strNomeColaborador">[JsonDoc("Nome")("stringValue").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="arg_strCBO">[JsonDoc("CBO")("stringValue").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="arg_strCargoColaborador">[JsonDoc("Cargo")("stringValue").ToString]</InArgument>
                <InArgument x:TypeArguments="ui:GenericValue" x:Key="arg_strSalarioBase">[JsonDoc("SalBase")("stringValue").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="arg_strHorasExtras">[JsonDoc("HE")("stringValue").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="arg_strMesReferente">[JsonDoc("MesRef")("stringValue").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="arg_strEmailUser">[JsonDoc("Email")("stringValue").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="arg_strCPF">[JsonDoc("CPF")("stringValue").ToString]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </If.Else>
        </If>
      </Sequence>
    </While>
  </Sequence>
</Activity>